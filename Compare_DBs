library(tidyverse)
library(xlsx)

##### Read in data 

sampleList2022 = readxl::read_excel("~/Stability/Wave setup/Sharepoint_Tracking_sheets/FY22 Stability Tracking Sheet.xlsx",
                                    sheet = "2022 Sample Details",
                                    skip = 1,
                                    col_names = TRUE,
                                    col_types = "text"
)

stabilityTrackerDF = readxl::read_excel("~/Code/Projects/Stability/tidyDat/cloneMasterCurated_Filtered.xlsx",
                        sheet = "Sheet 1",
                        col_names = TRUE,
                        col_types = "text") %>% 
    filter(!is.na(Model.System)) %>% 
    mutate(Clone = trimws(Clone, which = "both")) %>% 
    mutate(Model.System = trimws(Model.System, which = "both", whitespace = ))

sapDF = readxl::read_excel("~/Stability/getClones/SQL_Model_Systems2022-04-06.xlsx",
                           sheet = "Sheet 1",
                           col_types = "text",
                           col_names = TRUE)

BV421DF = readxl::read_excel("~/Code/Projects/Databases/BV421 database.xlsx",
                           sheet = "Sheet 1",
                           col_types = "text",
                           col_names = TRUE)

##### make dictionaries

stabilityDict = list()

for (i in 1:length(stabilityTrackerDF$Clone)) {
    
    stabilityDict[trimws(stabilityTrackerDF$Clone[i], which = "both")] = trimws(stabilityTrackerDF$Model.System[i], which = "both")
    
}

sapDict = list()

for (i in 1:length(sapDF$Clone)) {
    
    sapDict[trimws(sapDF$Clone[i], which = "both")] = trimws(sapDF$Model.System[i], which = "both")
    
}

##### Make DF from samples taking only relevant information to return 

scaffold = sampleList2022 %>%  select(Quarter, `Batch Number`, Team, Target, Clone)

##### create vectors indexed off scaffold df that matches clones to model system

modelListStability = c()
modelListSAP = c()

for (i in 1:length(scaffold$Clone)) {
    
    key = scaffold$Clone[i]
    valueSAP = as.character(sapDict[key])
    valueStability = as.character(stabilityDict[key])
    modelListStability = append(modelListStability, valueStability)
    modelListSAP = append(modelListSAP, valueSAP)

}

#### add vectors to scaffold df

scaffold = scaffold %>% mutate(Stability.Models = modelListStability, SAP.Models = modelListSAP)

# create filename and export scaffold

fileName = paste("C:/Users/10351517/Documents/Stability/getClones/Model_Systems_matches", Sys.Date(), ".xlsx", sep="")

openxlsx::write.xlsx(scaffold, file = fileName)
